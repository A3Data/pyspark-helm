---
apiVersion: {{ template "pyspark.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "pyspark.fullname" . }}
  labels:
    {{- include "pyspark.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "pyspark.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "pyspark.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "pyspark.fullname" . }}
    {{- if .Values.persistence.labels.enabled }}
      labels:
        {{- include "pyspark.labels" . | nindent 8 }}
    {{- end }}
    {{- with .Values.persistence.annotations  }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
{{ toYaml .Values.volumeClaimTemplate | indent 6 }}
  {{- end }}
  template:
    metadata:
      # name: "{{ template "pyspark.fullname" . }}"
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pyspark.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pyspark.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8888
              protocol: TCP
            - name: blockmanager
              containerPort: 7777
              protocol: TCP
            - name: driver
              containerPort: 2222
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: "{{ template "pyspark.fullname" . }}"
              mountPath: /home/notebook
            {{- end }}
          envFrom:
          {{- include "pyspark.customEnvironmentFrom" . | default "\n  []" | indent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
